#/bin/bash
#Test Script for Single Test Sets
#Author: David Petras
#Description: This BASH script will run TestResultsSingle for each of the 
#mutated programs generated by MuJava.  The results from this program will be 
#written to a results file that will be processed by the XML Generator to 
#produce the final XML file for VisMAN.
#This script will need to be placed in the directory taken directly from the
#MuJava results.

#Pass the name of the TestSuite as the first argument.

#Store the root directory holding the script and associated files.
root_dir=$(pwd)

#Make a directory that will be used to hold the files while testing.
mkdir ./testing_location

cp ./TestResultsSingle.java ./testing_location
cp ./"$1".class ./testing_location

#Change the directory to the traditional_mutants.
cd ./traditional_mutants

#List all of the method directories in the traditional_mutants directory.
ls -d -- */ > directories.txt

#Change to each directory in the list.
while read line; do
	cd $line
	#Change to each mutant directory.
	for mutant_dir in *; do
		if [ -d "$mutant_dir" ]; then
			#Copy the contents of the original folder into the
			#testing location.
			cd "$root_dir"/original
			cp *.java ../testing_location
			#Change to the mutant directory.
			cd ../traditional_mutants/"$line"/"$mutant_dir"
			#Copy the mutated source code to the testing location.
			cp *.java "$root_dir"/testing_location
			#Change to the testing_location directory.
			cd "$root_dir"/testing_location
			#Compile the program in the testing_location.
			javac -cp ".:$root_dir/junit-4.10.jar" *.java
			#Add a new heading to the results file indicating which mutant is being tested.
			echo "====$mutant_dir====" >> test_results.txt
			#Execute the tests and record the results.
			java -cp ".:$root_dir/junit-4.10.jar" TestResultsSingle $1 >>test_results.txt
			#Change back to method directory for next mutant.
			cd ../traditional_mutants/"$line"
		fi
	done
done < directories.txt
